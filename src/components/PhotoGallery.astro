---
import { Image } from "astro:assets";

const TAG_LIST: any[] = [
  {
    tagId: "all",
    tag: "All",
  },
  {
    tagId: "dalat",
    tag: "Da Lat",
  },
  {
    tagId: "hue",
    tag: "Hue",
  },
  {
    tagId: "tuyhoa",
    tag: "Tuy Hoa",
  },
];

const daLatImages = await Astro.glob("../assets/images/gallery/dalat/*").then(
  (files) => {
    return files.map((file) => {
      return {
        ...file.default,
        tag: "dalat",
      };
    });
  },
);

const hueImages = await Astro.glob("../assets/images/gallery/hue/*").then(
  (files) => {
    return files.map((file) => {
      return {
        ...file.default,
        tag: "hue",
      };
    });
  },
);

const tuyHoaImages = await Astro.glob("../assets/images/gallery/tuyhoa/*").then(
  (files) => {
    return files.map((file) => {
      return {
        ...file.default,
        tag: "tuyhoa",
      };
    });
  },
);

const getRandomItems = (arr: any[], count: number) => {
  // Shuffle the array
  const shuffled = arr.sort(() => Math.random() - 0.5);
  // Return the first 'count' items
  return shuffled.slice(0, count);
};

const shuffleArray = (array: any[]) => {
  for (let i = array.length - 1; i > 0; i--) {
    const j = Math.floor(Math.random() * (i + 1));
    [array[i], array[j]] = [array[j], array[i]];
  }
  return array;
};

const concatAndShuffleArrays = (arr1: any[], arr2: any[], arr3: any[]) => {
  const concatenatedArray = [...arr1, ...arr2, ...arr3];
  const shuffledArray = shuffleArray(concatenatedArray);
  return shuffledArray;
};

// Concatenate and shuffle arrays
const result = concatAndShuffleArrays(
  getRandomItems(daLatImages, 15),
  getRandomItems(hueImages, 15),
  getRandomItems(tuyHoaImages, 15),
);
---

<div>
  <div class="flex flex-row justify-center items-center gap-9 my-5 flex-wrap">
    {
      TAG_LIST.map(({ tagId, tag }) => (
        <div
          data-filter={tagId === "all" ? "all" : `.${tagId}`}
          class={`mix-button capitalize px-1 py-2 border-b-2 border-white font-medium cursor-pointer hover:border-b-2 hover:border-[#c8a898cc] hover:text-[#c8a898cc] transition-all duration-300${
            tagId === "all" ? " !border-[#c8a898cc] !text-[#c8a898cc]" : ""
          }`}
        >
          {tag}
        </div>
      ))
    }
  </div>
  <div
    class="mixitup-container grid md:grid-cols-3 xl:grid-cols-4 gap-5 md:gap-2 mt-10 max-h-[100rem] overflow-scroll"
  >
    {
      result.map((item) => (
        <Image class:list={[item.tag, "mix"]} src={item} alt="" />
      ))
    }
  </div>
</div>

<script>
  import mixitup from "mixitup";

  var mixer = mixitup(".mixitup-container", {
    animation: {
      duration: 700,
    },
    callbacks: {
      onMixClick: function (state: any, originalEvent: any) {
        const mixButtons = document.querySelectorAll(".mix-button");
        mixButtons.forEach((item) => {
          item.classList.remove("!border-[#c8a898cc]", "!text-[#c8a898cc]");
        });

        const element = this as unknown as HTMLElement;
        element.classList.add("!border-[#c8a898cc]", "!text-[#c8a898cc]");
      },
    },
  });
</script>
